{"version":3,"file":"formatters.js","sources":["../../../../../../node_modules/date-fns/_lib/format/formatters.js"],"sourcesContent":["import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n"],"names":["dayPeriodEnum","formatters","G","date","token","localize","era","getFullYear","width","y","signedYear","year","ordinalNumber","unit","lightFormatters","Y","options","signedWeekYear","getWeekYear","weekYear","twoDigitYear","addLeadingZeros","length","R","isoWeekYear","getISOWeekYear","u","Q","quarter","Math","ceil","getMonth","String","context","q","M","month","L","w","week","getWeek","I","isoWeek","getISOWeek","d","getDate","D","dayOfYear","getDayOfYear","E","dayOfWeek","getDay","day","e","localDayOfWeek","weekStartsOn","c","i","isoDayOfWeek","a","dayPeriodEnumValue","getHours","dayPeriod","toLowerCase","b","hours","B","h","H","K","k","m","getMinutes","s","getSeconds","S","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","timestamp","trunc","T","offset","delimiter","sign","absOffset","abs","minutes"],"mappings":"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","x_google_ignoreList":[0]}