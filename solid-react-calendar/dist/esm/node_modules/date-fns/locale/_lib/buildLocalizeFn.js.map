{"version":3,"file":"buildLocalizeFn.js","sources":["../../../../../../node_modules/date-fns/locale/_lib/buildLocalizeFn.js"],"sourcesContent":["/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n"],"names":["buildLocalizeFn","args","value","options","valuesArray","context","String","formattingValues","defaultWidth","defaultFormattingWidth","width","values","argumentCallback"],"mappings":"AAuCO,SAASA,EAAgBC,GAC9B,MAAO,CAACC,EAAOC,KAGb,IAAIC,EACJ,GAAgB,gBAHAD,GAASE,QAAUC,OAAOH,EAAQE,SAAW,eAG7BJ,EAAKM,iBAAkB,CACrD,MAAMC,EAAeP,EAAKQ,wBAA0BR,EAAKO,aACnDE,EAAQP,GAASO,MAAQJ,OAAOH,EAAQO,OAASF,EAEvDJ,EACEH,EAAKM,iBAAiBG,IAAUT,EAAKM,iBAAiBC,EAC9D,KAAW,CACL,MAAMA,EAAeP,EAAKO,aACpBE,EAAQP,GAASO,MAAQJ,OAAOH,EAAQO,OAAST,EAAKO,aAE5DJ,EAAcH,EAAKU,OAAOD,IAAUT,EAAKU,OAAOH,EACjD,CAID,OAAOJ,EAHOH,EAAKW,iBAAmBX,EAAKW,iBAAiBV,GAASA,EAG5C,CAE7B","x_google_ignoreList":[0]}